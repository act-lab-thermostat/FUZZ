Program {
    statements:
    [ FunctionDeclaration {
        id: 'cmsi',
        params: [ Param { id: 'professor', type: 'string' } ],
        returnType: 'string',
        body:
            [ IphStatement {
                tests:
                    [ BinaryExpression {
                        op: '==',
                        left: IdentifierExpression { id: 'professor' },
                        right: StringLiteral { value: 'Toal' }},
                      BinaryExpression {
                        op: '==',
                        left: IdentifierExpression { id: 'professor' },
                        right: StringLiteral { value: 'Dondi' }}]
                consequents: [
                    [ ReturntStatement { returnValue: 'Compilers' } ],
                    [ ReturntStatement { returnValue: 'Interaction' } ]],
                alternate: [ ReturntStatement { returnValue: 'We love Comp Sci'}]}]}]}
